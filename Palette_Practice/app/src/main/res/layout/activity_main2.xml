<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity2"
    android:orientation="vertical">

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        />
    <!-- TextView 에 속한 button class. 일반적인 text class 의 속성들을 사용할 수 있다.
        button 으로서 기능하려면 자바나 코틀린 파일에서 listener 를 설정해야 한다.
        button 의 형태를 바꾸고 싶을 때, drawable 에서 설정한 형태로 모양을 정해줄 수도 있다.
        android:background="@drawable/형태_지정_파일명" 형태로 사용 가능
    -->

    <ImageButton
        android:id="@+id/imageButton"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:layout_weight="1"
        app:srcCompat="@android:drawable/arrow_up_float" />
    <!--   View 의 Imageview 에 속한 ImageButton class. 일반적인 View 의 속성들을 사용할 수 있다.
       원하는 이미지를 src 속성에서 지정해주면 된다. 이미지 파일의 위치는 /res/drawable
       button 으로서 기능하려면 listener 를 설정해야 한다.-->

    <com.google.android.material.chip.ChipGroup
        android:layout_width="match_parent"
        android:layout_height="100dp">

        <com.google.android.material.chip.Chip
            android:id="@+id/chip4"
            android:layout_width="80dp"
            android:layout_height="wrap_content"
            style="@style/Widget.MaterialComponents.Chip.Action"
            android:text="Banana"
            android:gravity="center"
            />

        <com.google.android.material.chip.Chip
            android:id="@+id/chip5"
            android:layout_width="120dp"
            android:layout_height="wrap_content"
            style="@style/Widget.MaterialComponents.Chip.Entry"
            android:text="Banana"
            android:gravity="center"
            />

        <com.google.android.material.chip.Chip
            android:id="@+id/chip6"
            android:layout_width="80dp"
            android:layout_height="wrap_content"
            style="@style/Widget.MaterialComponents.Chip.Filter"
            android:text="Banana"
            android:gravity="center"/>

        <com.google.android.material.chip.Chip
            android:id="@+id/chip7"
            android:layout_width="80dp"
            android:layout_height="wrap_content"
            style="@style/Widget.MaterialComponents.Chip.Choice"
            android:text="Banana"
            android:gravity="center"
            />

    </com.google.android.material.chip.ChipGroup>

    <!-- 필터링 설정이나 작은 텍스트를 보여주는 용도로 사용하는 chip
        크게보면 View 를 상속 중.
        Google Android 에서 지원하는 Material Design 이다.
        Entry chip, Filter Chip, Choice Chip, Action Chip 이 있다.
        사용 시 style이 디폴트 옵션인 AppCompat 테마로 되어있으면 에러가 발생할 수 있다.
        MaterialComponents 테마 중 하나를 사용하도록 설정해야 한다.
        ex) <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">

        Entry Chip 은 복잡한 정보를 간략하게 보여줄 때 사용하도록 권장하고 있고, chip 아이콘과
        닫기 아이콘을 별도로 설정이 가능하다. 추가적으로 체크 상태(선택된 상태) 지정이 가능하다.

        Filter Chip 은 검색 결과나 내용 등에 필터를 걸 때 사용하도록 권장되는 chip 이다.
        추가적으로 체크 상태(선택된 상태) 지정이 가능하다.

        Choice Chip 은 한정된 chip 갯수 중에서 단일 선택을 수행할 때 사용하도록 권장된다.
        항상 체크 상태를 갖게 된다.

        Action Chip 은 별도의 설정을 해주지 않을 경우 기본으로 설정되는 chip 이며,
        어떤 Action 을 수행하거나 컨텐츠의 주제등을 보여줄 때에 사용하는 것을 권장하고 있다.
        Chip 아이콘을 설정 가능하며, 체크상태를 지정할 수 없다는 특징이 있다.
        Chip 아이콘은 app:chipIcon="@drawable/아이콘 파일명" 으로 설정 가능.

        ChipGroup 은 여러개의 chip 에 공통된 설정을 부여하거나, 관리하고 싶을 때 사용.

    출처: https://mparchive.tistory.com/187 [My Program Archive]
         https://sseong66.tistory.com/45
         https://jroomstudio.tistory.com/28
        -->

    <CheckBox
        android:id="@+id/checkBox1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:checked="true"
        android:text="딸기" />

    <CheckBox
        android:id="@+id/checkBox2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="포도" />

    <CheckBox
        android:id="@+id/checkBox3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="키위" />

    <CheckBox
        android:id="@+id/checkBox4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="자몽" />



    <!-- View-TextView-button - CompoundButton 을 상속받고 있다.
    *RadioButton ToggleButton Switch 도 같은 상속을 받고 있다.
    버튼 계열이 그렇듯, setOnClickListener() 를 통해 이벤트 처리를 해줘야 값이 넘어간다.
    checked 속성을 통해 기본 값(체크되어 있는 상태 | 체크 안된 상태) 을 설정할 수 있다.
    https://recipes4dev.tistory.com/133
    -->
<!--    출처: https://bitsoul.tistory.com/45 [Happy Programmer~]-->


    <RadioGroup
        android:layout_width="match_parent"
        android:layout_height="100dp">

        <RadioButton
            android:id="@+id/radioButton3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="크로아상" />

        <RadioButton
            android:id="@+id/radioButton4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="연유토스트" />

        <RadioButton
            android:id="@+id/radioButton5"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="바닐라라떼" />

    </RadioGroup>

    <!-- View-TextView-button - CompoundButton 을 상속받고 있다.
        *Checkbox ToggleButton Switch 도 같은 상속을 받고 있다.

        여러 선택지 중 1개만 선택할 수 있도록 지정한 button.
        같은 RadioGroup 내에 묶여있는 여러 RadioButton 끼리만 서로에게 영향을 준다.
        https://yoo-hyeok.tistory.com/55
        https://developer.android.com/guide/topics/ui/controls/radiobutton?hl=ko
        -->

    <!--  View-TextView-button - CompoundButton 을 상속받고 있다.
            *Checkbox RadioButton Switch 도 같은 상속을 받고 있다.
           선택하면 내용이 바뀌는 버튼, 기본 텍스트를 android:textOff | android:textOn
           으로 설정할 수 있다.
           https://kd3302.tistory.com/63
           -->

    <ToggleButton
        android:id="@+id/toggleButton"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="@color/teal_200"
        android:text="ToggleButton"
        android:textAllCaps="false"
        android:textOff="TVn"
        android:textOn="아빠 안 잔다" />

    <Switch
        android:id="@+id/switch1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Switch"
        android:showText="true"
        />


    <!-- View-TextView-button - CompoundButton 을 상속받고 있다.
         *Checkbox ToggleButton RadioButton 도 같은 상속을 받고 있다.
         주요 속성은 다음과 같다.
         android : showText // on/off(설정/해제) Text 가 보일 지 안 보일지 결정
         android : thumbTextPadding // Switch Caption 과 Thumb 사이 간격
         android : switchMinWidth // 스위치의 너비 최소 크기
         android : switchPadding // Switch Caption 과 스위치 사이의 간격
         android : switchAppearance // on/off Text 의 Style 지정
         android : textOn | textOff // On, Off 상태일 때 표시될 text
         android : thumb // switch 모양 설정
         android :thumbTint // thumb 에 색상 지정
         android : track // track 모양 지정
         android : trackTint // track 에 색상 지정
         * thumb 는 스위치, track 은 스위치가 지나가는
    https://lktprogrammer.tistory.com/181 -->

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/floatingActionButton"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:clickable="true"
        app:srcCompat="@android:drawable/ic_popup_reminder"
        app:rippleColor="@color/black"/>
<!--    View - ImageButton 을 상속받고 있다.
    android : srcCompat 으로 FAB 에 표시되는 Icon 을 지정할 수 있다.
    backgroundTint // fab 버튼의 색상을 지정할 수 있다. default 색상값은 colors.xml 에 정의된
    colorAccent 색상으로 지정된다.
    fabSize // fab 의 size를 지정할 수 있다. auto, mini, normal 값들 중 하나를 사용할 수 있다.
                auto 로 지정하면 화면 사이즈에 맞추어 자동으로 size 가 지정된다.
                https://lktprogrammer.tistory.com/186
-->

</LinearLayout>

